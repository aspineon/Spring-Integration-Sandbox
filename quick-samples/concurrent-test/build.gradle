/*
Usage:
 1. download and install gradle
    - port install gradle on Mac
    - wget http://dist.codehaus.org/gradle/gradle-0.8-all.zip | unzip on *nix
    - if you're on Windows, fix that first ;)
 2. cd to the directory of this script and run 'gradle'

If you want to compile the source without gradle, make sure you add the contents of ./build/output/lib and
./build/output/test-lib to the classpath. You'll have to run gradle at least once to download the libs, or
do that manually.

You can also run 'gradle eclipse' to generate eclipse project files and import those into an IDE that supports
them.
 */

usePlugin 'java'
usePlugin 'eclipse'

repositories {
  mavenCentral()
  mavenRepo urls: 'http://s3.amazonaws.com/maven.springframework.org/snapshot'
  mavenRepo urls: 'http://s3.amazonaws.com/maven.springframework.org/milestone'
  mavenRepo urls: 'http://s3.amazonaws.com/maven.springframework.org/release'
}

springVersion = "3.0.1.RELEASE"

dependencies {
  compile group: 'org.slf4j', name: 'slf4j-api', version: '1.5.8'
  compile('org.springframework.integration:spring-integration-core:2.0.0.BUILD-SNAPSHOT') {
    exclude group: 'org.springframework' //bug in maven-manifest.xml causes dep on RC1 otherwise
  }
  compile group: 'org.springframework', name: 'spring-beans', version: springVersion
  compile group: 'org.springframework', name: 'spring-aop', version: springVersion
  compile group: 'org.springframework', name: 'spring-context', version: springVersion
  compile group: 'org.springframework', name: 'spring-expression', version: springVersion
  compile group: 'org.springframework', name: 'spring-tx', version: springVersion
  compile group: 'org.springframework', name: 'spring-core', version: springVersion
  compile group: 'org.springframework', name: 'spring-asm', version: springVersion
  testCompile group: 'junit', name: 'junit', version: '4.7'
  testCompile group: 'org.mockito', name: 'mockito-all', version: '1.8.1'
  testCompile group: 'org.springframework', name: 'spring-test', version: springVersion
}

task copyRuntimeDependencies(dependsOn: configurations.runtime.buildArtifacts, type: Copy) {
  into('build/output/lib')
  from configurations.default
  from configurations.default.allArtifacts*.file
}

task copyTestDependencies(dependsOn: configurations.runtime.buildArtifacts, type: Copy) {
  into('build/output/test-lib')
  from configurations.testCompile
  from configurations.testCompile.allArtifacts*.file
}

task deps
deps.dependsOn copyTestDependencies, copyRuntimeDependencies

defaultTasks 'clean', 'deps', 'build'

sourceCompatibility = 1.6
version = '0.0.1-SNAPSHOT'
jar.basename = 'concurrent-test'


